---
title: "Slitasje og kjørespor"
output:
  html_document
---




<!-- Replace 'indicator name' with yor own indicator name  -->
# Slitasje og kjørespor

<br />

_Author and date:_
Anders L. Kolstad

```{r}
Sys.Date()
```

<br />

<!-- Load all you dependencies here -->
```{r setup, include=FALSE}
library(knitr)
library(sf)
library(tmap)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
```


<!-- Fill in which ecosystem the indicator belongs to, as well as the ecosystem characteristic it should be linked to. It's OK to use some Norwegian here -->
```{r, echo=F}
Ecosystem <- "Våtmark, Naturlig åpne områder under skoggrensa, Semi-naturlig mark" 
Egenskap  <- "Primærproduksjon (evt. Abiotiske fohold)"
ECT       <- "Physical state characteristics" 
Contact   <- "anders.kolstad@nina.no"
```

```{r, echo=F}
metaData <- data.frame(Ecosystem,
                       "Økologisk egenskap" = Egenskap,
                       "ECT class" = ECT)
knitr::kable(metaData)
```

<!-- Don't remove these three html lines -->
<br />
<br />
<hr />



<!-- Document you work below. Try not to change  the headers too much. Data can be stored on NINA server. Since the book is rendered on the R Server this works fine, but note that directory paths are different on the server compared to you local machine. If it is not too big you may store under /data/ on this repository -->

## Introduction
<!-- Text here -->

## About the underlying data
<!-- Text here -->


### Representativity in time and space
<!-- Text here -->

### Original units
<!-- Text here -->


### Temporal coverage
<!-- Text here -->


### Aditional comments about the dataset
<!-- Text here -->


## Ecosystem characteristic
### Norwegain standard
<!-- Text here -->

### <!-- Text here -->
<!-- Text here. Note that there are two parallell systems for defining ecosystem properties - one Norwegian and one international (SEEA EA). See man/SEEA EA examples.pdf for help -->

## Collinearities with other indicators
<!-- Text here -->

## Reference state and values
### Reference state
<!-- Text here -->


### Reference values, thresholds for defining _good ecological condition_, minimum and/or maximum values
<!-- Text here -->


## Uncertainties
<!-- Text here -->

## References
<!-- Text here -->


## Analyses
### Data sets

#### Nature type mapping
This indicator uses the dataset `Naturtyper etter Miljødirektoratets Instruks`, which can be found [here](https://kartkatalog.geonorge.no/metadata/naturtyper-miljoedirektoratets-instruks/eb48dd19-03da-41e1-afd9-7ebc3079265c).
The dataset has already been [cleaned](#naturtype1) and [initial analyses on thematic representativity](#naturtype2) has been done.

```{r, eval=T}
dat <- readRDS("/data/P-Prosjekter2/41201785_okologisk_tilstand_2022_2023/data/Mdir_Naturtyper_cleanedALK.rds")
```

We also have a separate summary file where the nature types are manually mapped to the correct NiN-main types. We can use this to find the nature types associated with the NiN main types that we are interested in.
```{r}
nt <- readRDS("data/naturetypes/natureType_summary.rds")
```

We are only interested in a few NiN main types and their mapping units
```{r}
main <- c("T12",
          "T18",
          "T21",
          "T31",
          "T33",
          "T34",
          "V1",
          "V3")
```

```{r}
nt2 <- nt[nt$NiN_mainType %in% main,]
```

Sub-setting the main data file:
```{r}
dat2 <- dat[dat$naturtype %in% nt2$Nature_type,]
```

```{r, fig.cap="An overview of the naturetypes for which we will calculate the indicator. Colours refer to the main ecosystem affiliation."}
ggplot(data = dat2, aes(x = naturtype, fill = hovedøkosystem))+
  geom_bar()+
  coord_flip()+
  theme_bw(base_size = 12)+
  guides(fill = "none")+
  xlab("")+
  ylab("Number of localities")
```

#### Vegetation zones (bioregions)
I want to look at if the indicator values can be averages over smaller and more meaningfu areas (ecological homogeneous areas) than the regions.
```{r}
path <- "/data/R/GeoSpatialData/BiogeographicalRegions/Norway_VegetationZones_Moen/Original/Vector/soner.shp"
```

```{r}
soner <- sf::read_sf(path)
```

```{r}
tm_shape(soner)+
  tm_polygons(col = "NAVN")
```

It could make sense to combine some sones, but I will later split the sones by region, and then merge sones that are very uncommon in a spesific region.



#### Regions
Importing a shape file with the regional delineation. 
```{r}
reg <- sf::st_read("data/regions.shp")
#st_crs(reg)
```

### Scaled indicator values
<!-- Text and analyses here -->

### Uncertainty
<!-- Text here -->


## Prepare export
<!-- Text here -->


### Eksport file (final product)
<!-- Export final file. Ideally a georeferenced shape or raster wit indicators values (raw and normalised), reference values and errors. -->




